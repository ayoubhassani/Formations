Ext.data.JsonP.CreateForm({"tagname":"class","name":"CreateForm","autodetected":{},"files":[{"filename":"FormBuild.js","href":"FormBuild.html#CreateForm"}],"members":[{"name":"constructor","tagname":"method","owner":"CreateForm","id":"method-constructor","meta":{}},{"name":"inputColor","tagname":"method","owner":"CreateForm","id":"method-inputColor","meta":{}},{"name":"inputEmail","tagname":"method","owner":"CreateForm","id":"method-inputEmail","meta":{}},{"name":"inputNumber","tagname":"method","owner":"CreateForm","id":"method-inputNumber","meta":{}},{"name":"inputPassword","tagname":"method","owner":"CreateForm","id":"method-inputPassword","meta":{}},{"name":"inputRadios","tagname":"method","owner":"CreateForm","id":"method-inputRadios","meta":{}},{"name":"inputRange","tagname":"method","owner":"CreateForm","id":"method-inputRange","meta":{}},{"name":"inputTel","tagname":"method","owner":"CreateForm","id":"method-inputTel","meta":{}},{"name":"inputText","tagname":"method","owner":"CreateForm","id":"method-inputText","meta":{}},{"name":"inputTextarea","tagname":"method","owner":"CreateForm","id":"method-inputTextarea","meta":{}},{"name":"inputTime","tagname":"method","owner":"CreateForm","id":"method-inputTime","meta":{}},{"name":"labelUpInput","tagname":"method","owner":"CreateForm","id":"method-labelUpInput","meta":{}},{"name":"publishForm","tagname":"method","owner":"CreateForm","id":"method-publishForm","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-CreateForm","short_doc":"Classe CreateForm :\n\n Classe permettant d'instancier un nouveau formulaire et ensemble de méthodes pour modifier, sur...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/FormBuild.html#CreateForm' target='_blank'>FormBuild.js</a></div></pre><div class='doc-contents'><h1>Classe CreateForm :</h1>\n\n<p> Classe permettant d'instancier un nouveau formulaire et ensemble de méthodes pour modifier, surcharger et publier celui-ci.</p>\n\n<p>Gasquez Christoph <a href=\"&#109;&#x61;&#105;&#108;&#x74;&#111;&#58;&#99;&#104;&#x72;&#105;&#115;&#116;&#x6f;&#x70;&#x68;&#x65;&#x40;&#103;&#97;&#115;&#x71;&#117;&#101;&#x7a;&#46;&#x66;&#x72;\">&#99;&#104;&#114;&#105;&#115;&#x74;&#111;&#x70;&#x68;&#101;&#x40;&#x67;&#97;&#x73;&#x71;&#117;&#101;&#x7a;&#x2e;&#x66;&#114;</a></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CreateForm'>CreateForm</span><br/><a href='source/FormBuild.html#CreateForm-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/CreateForm-method-constructor' class='name expandable'>CreateForm</a>( <span class='pre'></span> ) : <a href=\"#!/api/CreateForm\" rel=\"CreateForm\" class=\"docClass\">CreateForm</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Création d'un Element de type form. ...</div><div class='long'><p>Création d'un Element de type form.</p>\n\n<h2>Utilisation :</h2>\n\n<p>Création d'un formulaire à l'aide de la classe CreateForm, de CrispiLib.js</p>\n\n<pre><code> var f = new Crispi.CreateForm();\n</code></pre>\n\n<h2>Fonction :</h2>\n\n<pre><code> Crispi.CreateForm = function () {\n     this.form = document.createElement('form');\n };\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/CreateForm\" rel=\"CreateForm\" class=\"docClass\">CreateForm</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-inputColor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CreateForm'>CreateForm</span><br/><a href='source/FormBuild.html#CreateForm-method-inputColor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CreateForm-method-inputColor' class='name expandable'>inputColor</a>( <span class='pre'>id, name, label, value</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Ajouter un Input de type couleur à l'objet CreatForm. ...</div><div class='long'><p>Ajouter un Input de type couleur à l'objet CreatForm.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String<div class='sub-desc'><p>ID à ajouter à l'élément créé.</p>\n</div></li><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Nom à ajouter aux élément créé (à l'attribut name de l'input et, si label, au for de l'élément label).</p>\n</div></li><li><span class='pre'>label</span> : String<div class='sub-desc'><p>Ignoré si false. Si label, ajout de l'élément label avec inner.html du paramètre envoyé.</p>\n</div></li><li><span class='pre'>value</span> : String<div class='sub-desc'><p>Ignoré si false. Si value, ajout de l'attribut value à l'élément input créé avac la valeur de la chaine de carractère envoyé en paramètre, ex : #FFFFFF pour le blanc.</p>\n\n<h2>Utilisation :</h2>\n\n<pre><code> var f = new Crispi.CreateForm(method, action);\n f.inputColor('id', 'name', 'label', 'value');\n f.publishForm('idTag);\n</code></pre>\n\n<h2>Fonction :</h2>\n\n<pre><code> Crispi.CreateForm.prototype.inputColor =function (id, name, label, value) {\n     var group = document.createElement('div');\n     group.id = 'form_group_'+id;\n     group.className = 'c_from_group';\n     if (label){\n         var lab = document.createElement('label');\n         lab.id = 'label_'+id;\n         lab.htmlFor = id;\n         lab.innerHTML = label;\n         group.appendChild(lab);\n     }\n     var input = document.createElement('input');\n     input.type = 'tel';\n     input.id = id;\n     input.name = name;\n     if (value){\n         input.value = value;\n     }\n\n     group.appendChild(input);\n     this.form.appendChild(group);\n     };\n</code></pre>\n</div></li></ul></div></div></div><div id='method-inputEmail' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CreateForm'>CreateForm</span><br/><a href='source/FormBuild.html#CreateForm-method-inputEmail' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CreateForm-method-inputEmail' class='name expandable'>inputEmail</a>( <span class='pre'>id, name, label, placeholder, maxlength</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Ajouter un Input de type email à l'objet CreatForm. ...</div><div class='long'><p>Ajouter un Input de type email à l'objet CreatForm.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String<div class='sub-desc'><p>ID à ajouter à l'élément créé.</p>\n</div></li><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Nom à ajouter aux élément créé (à l'attribut name de l'input et, si label, au for de l'élément label).</p>\n</div></li><li><span class='pre'>label</span> : string<div class='sub-desc'><p>Ignoré si false. Si label, ajout de l'élément label avec inner.html du paramètre envoyé.</p>\n</div></li><li><span class='pre'>placeholder</span> : String<div class='sub-desc'><p>Ignoré si false. Si placeholder, ajout de l'attribut placeholder à l'élément input créé avac la valeur de la chaine de carractère envoyé en paramètre.</p>\n</div></li><li><span class='pre'>maxlength</span> : Number<div class='sub-desc'><p>Ingnoré si false ou not Integer. Si maxlength, ajout de l'attribut à l'élément créé avec la valeur de l'integer envoyé en paramètre.</p>\n\n<h2>Utilisation :</h2>\n\n<pre><code> var f = new Crispi.CreateForm(method, action);\n f.inputEmail('id', 'name', 'label', 'palceholder', Int);\n f.publishForm('idTag);\n</code></pre>\n\n<h2>Fonction :</h2>\n\n<pre><code> Crispi.CreateForm.prototype.inputEmail =function (id, name, label, placeholder, maxlength) {\n     var group = document.createElement('div');\n     group.id = 'form_group_'+id;\n     group.className = 'c_from_group';\n     if (label){\n         var lab = document.createElement('label');\n         lab.id = 'label_'+id;\n         lab.htmlFor = id;\n         lab.innerHTML = label;\n         group.appendChild(lab);\n     }\n     var input = document.createElement('input');\n     input.type = 'email';\n     input.id = id;\n     input.name = name;\n     if (placeholder){\n         input.placeholder = placeholder;\n     }\n     if (maxlength &amp;&amp; Number.isInteger(maxlength)){\n         input.maxLength = maxlength;\n     }\n     group.appendChild(input);\n     this.form.appendChild(group);\n     };\n</code></pre>\n</div></li></ul></div></div></div><div id='method-inputNumber' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CreateForm'>CreateForm</span><br/><a href='source/FormBuild.html#CreateForm-method-inputNumber' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CreateForm-method-inputNumber' class='name expandable'>inputNumber</a>( <span class='pre'>id, name, label, value, min, max</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Ajouter un Input de type number à l'objet CreatForm. ...</div><div class='long'><p>Ajouter un Input de type number à l'objet CreatForm.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String<div class='sub-desc'><p>ID à ajouter à l'élément créé.</p>\n</div></li><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Nom à ajouter aux élément créé (à l'attribut name de l'input et, si label, au for de l'élément label).</p>\n</div></li><li><span class='pre'>label</span> : String<div class='sub-desc'><p>Ignoré si false. Si label, ajout de l'élément label avec inner.html du paramètre envoyé.</p>\n</div></li><li><span class='pre'>value</span> : Number/String<div class='sub-desc'><p>Ignoré si false. Si value, ajout de l'attribut value à l'élément input créé avac la valeur de la chaine de carractère envoyé en paramètre, ex : '12:30:05'.</p>\n</div></li><li><span class='pre'>min</span> : Number/String<div class='sub-desc'><p>Ignoré si false. Si min, ajout de l'attribut min à l'élément input créé avac la valeur de l'integer envoyé en paramètre, ex : '0'.</p>\n</div></li><li><span class='pre'>max</span> : Number/String<div class='sub-desc'><p>Ignoré si false. Si max, ajout de l'attribut max à l'élément input créé avac la valeur de l'integer envoyé en paramètre, ex : '100'.</p>\n\n<p>ATTENTION : Si Min, Max ou Value sont égale à 0, alors, envoyer le carractère 0 (ex : '0'):</p>\n\n<h2>Utilisation :</h2>\n\n<pre><code> var f = new Crispi.CreateForm(method, action);\n f.inputNumber('id', 'name', 'label', 'value', min, max);\n f.publishForm('idTag);\n</code></pre>\n\n<h2>Fonction :</h2>\n\n<pre><code> Crispi.CreateForm.prototype.inputNumber =function (id, name, label, value, min, max) {\n     var group = document.createElement('div');\n     group.id = 'form_group_'+id;\n     group.className = 'c_from_group';\n     if (label){\n         var lab = document.createElement('label');\n         lab.id = 'label_'+id;\n         lab.htmlFor = id;\n         lab.innerHTML = label;\n         group.appendChild(lab);\n     }\n     var input = document.createElement('input');\n     input.type = 'number';\n     input.id = id;\n     input.name = name;\n     if (value){\n         input.value = value;\n     }\n     if (min){\n         input.min = min;\n     }\n     if (max){\n         input.max = max;\n     }\n\n     group.appendChild(input);\n     this.form.appendChild(group);\n     };\n</code></pre>\n</div></li></ul></div></div></div><div id='method-inputPassword' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CreateForm'>CreateForm</span><br/><a href='source/FormBuild.html#CreateForm-method-inputPassword' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CreateForm-method-inputPassword' class='name expandable'>inputPassword</a>( <span class='pre'>id, name, label, placeholder, maxlength</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Ajouter un Input de type passwond à l'objet CreatForm. ...</div><div class='long'><p>Ajouter un Input de type passwond à l'objet CreatForm.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String<div class='sub-desc'><p>ID à ajouter à l'élément créé.</p>\n</div></li><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Nom à ajouter aux élément créé (à l'attribut name de l'input et, si label, au for de l'élément label).</p>\n</div></li><li><span class='pre'>label</span> : String<div class='sub-desc'><p>Ignoré si false. Si label, ajout de l'élément label avec inner.html du paramètre envoyé.</p>\n</div></li><li><span class='pre'>placeholder</span> : String<div class='sub-desc'><p>Ignoré si false. Si placeholder, ajout de l'attribut placeholder à l'élément input créé avac la valeur de la chaine de carractère envoyé en paramètre.</p>\n</div></li><li><span class='pre'>maxlength</span> : Number<div class='sub-desc'><p>Ingnoré si false ou not Integer. Si maxlength, ajout de l'attribut à l'élément créé avec la valeur de l'integer envoyé en paramètre.</p>\n\n<h2>Utilisation :</h2>\n\n<pre><code> var f = new Crispi.CreateForm(method, action);\n f.inputPassword('id', 'name', 'label', 'palceholder', Int);\n f.publishForm('idTag);\n</code></pre>\n\n<h2>Fonction :</h2>\n\n<pre><code> Crispi.CreateForm.prototype.inputPassword =function (id, name, label, placeholder, maxlength) {\n     var group = document.createElement('div');\n     group.id = 'form_group_'+id;\n     group.className = 'c_from_group';\n     if (label){\n         var lab = document.createElement('label');\n         lab.id = 'label_'+id;\n         lab.htmlFor = id;\n         lab.innerHTML = label;\n         group.appendChild(lab);\n     }\n     var input = document.createElement('input');\n     input.type = 'password';\n     input.id = id;\n     input.name = name;\n     if (placeholder){\n         input.placeholder = placeholder;\n     }\n     if (maxlength &amp;&amp; Number.isInteger(maxlength)){\n         input.maxLength = maxlength;\n     }\n     group.appendChild(input);\n     this.form.appendChild(group);\n     };\n</code></pre>\n</div></li></ul></div></div></div><div id='method-inputRadios' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CreateForm'>CreateForm</span><br/><a href='source/FormBuild.html#CreateForm-method-inputRadios' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CreateForm-method-inputRadios' class='name expandable'>inputRadios</a>( <span class='pre'>id, name, label, liste</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Ajouter un ensemble d'Input type radio à l'objet CreatForm. ...</div><div class='long'><p>Ajouter un ensemble d'Input type radio à l'objet CreatForm.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String<div class='sub-desc'><p>ID à ajouter à l'élément créé.</p>\n</div></li><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Nom à ajouter aux éléments créés (à l'attribut name de l'input et, si label, au for de l'élément label).</p>\n</div></li><li><span class='pre'>label</span> : String<div class='sub-desc'><p>Ignoré si false. Si label, ajout de l'élément label avec inner.html du paramètre envoyé.</p>\n</div></li><li><span class='pre'>liste</span> : Object<div class='sub-desc'><p>Liste des valeur, text et checked de chaque input radio créer.</p>\n\n<h2>Utilisation :</h2>\n\n<pre><code> var f = new Crispi.CreateForm(method, action);\n f.inputRadio('idRadio', 'MyRadios', 'Faites votre chois :',\n     [{\n         'value': 'radio1',\n         'text': '1er Radio'\n     },{\n         'value': 'radio2',\n         'text': 'Radio 2',\n         'checked': true\n     }]);\n f.publishForm('idTag);\n</code></pre>\n\n<h2>Fonction :</h2>\n\n<pre><code> Crispi.CreateForm.prototype.inputRadios = function (id, name, label, liste) {\n     var group = window.document.createElement('div');\n     var input = [];\n     var text = [];\n     group.id = 'form_group_'+id;\n     group.className = 'c_from_group';\n     if (label){\n         var lab = document.createElement('label');\n         lab.id = 'label_'+id;\n         lab.htmlFor = id;\n         lab.innerHTML = label;\n         group.appendChild(lab);\n     }\n     for (var i=0; i&lt;liste.length; i++){\n     input[i] = document.createElement('input');\n     input[i].type = 'radio';\n     input[i].id = id+i;\n     input[i].name = name;\n     input[i].value = liste[i].value;\n     text[i]=document.createTextNode(liste[i].text);\n     if (liste[i].checked){\n         input[i].setAttribute('checked', 'true');\n     }\n     group.appendChild(input[i]);\n     group.appendChild(text[i]);\n     }\n     this.form.appendChild(group);\n };\n</code></pre>\n</div></li></ul></div></div></div><div id='method-inputRange' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CreateForm'>CreateForm</span><br/><a href='source/FormBuild.html#CreateForm-method-inputRange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CreateForm-method-inputRange' class='name expandable'>inputRange</a>( <span class='pre'>id, name, label, value, min, max, step</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Ajouter un Input de type Range à l'objet CreatForm. ...</div><div class='long'><p>Ajouter un Input de type Range à l'objet CreatForm.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String<div class='sub-desc'><p>ID à ajouter à l'élément créé.</p>\n</div></li><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Nom à ajouter aux élément créé (à l'attribut name de l'input et, si label, au for de l'élément label).</p>\n</div></li><li><span class='pre'>label</span> : String<div class='sub-desc'><p>Ignoré si false. Si label, ajout de l'élément label avec inner.html du paramètre envoyé.</p>\n</div></li><li><span class='pre'>value</span> : Number/String<div class='sub-desc'><p>Ignoré si false. Si value, ajout de l'attribut value à l'élément input créé avac la valeur de la chaine de carractère envoyé en paramètre, ex : '12:30:05'.</p>\n</div></li><li><span class='pre'>min</span> : Number/String<div class='sub-desc'><p>Ignoré si false. Si min, ajout de l'attribut min à l'élément input créé avac la valeur de l'integer envoyé en paramètre, ex : '0'.</p>\n</div></li><li><span class='pre'>max</span> : Number/String<div class='sub-desc'><p>Ignoré si false. Si max, ajout de l'attribut max à l'élément input créé avac la valeur de l'integer envoyé en paramètre, ex : '100'.</p>\n</div></li><li><span class='pre'>step</span> : Number/String<div class='sub-desc'><p>Ignoré si false. Si step, ajout de l'attribut step à l'élément input créé avac la valeur de l'integer envoyé en paramètre, ex : '1'.</p>\n\n<p>ATTENTION : Si Min, Max, Value ou Step sont égale à 0, alors, envoyer le carractère 0 (ex : '0'):</p>\n\n<h2>Utilisation :</h2>\n\n<pre><code> var f = new Crispi.CreateForm(method, action);\n f.inputRange('id', 'name', 'label', 'value', min, max, step);\n f.publishForm('idTag);\n</code></pre>\n\n<h2>Fonction :</h2>\n\n<pre><code> Crispi.CreateForm.prototype.inputRange =function (id, name, label, value, min, max, step) {\n     var group = document.createElement('div');\n     group.id = 'form_group_'+id;\n     group.className = 'c_from_group';\n     if (label){\n         var lab = document.createElement('label');\n         lab.id = 'label_'+id;\n         lab.htmlFor = id;\n         lab.innerHTML = label;\n         group.appendChild(lab);\n     }\n     var input = document.createElement('input');\n     input.type = 'range';\n     input.id = id;\n     input.name = name;\n     if (value){\n         input.value = value;\n     }\n     if (min){\n         input.min = min;\n     }\n     if (max){\n         input.max = max;\n     }\n     if (step){\n         input.step = step;\n     }\n\n     group.appendChild(input);\n     this.form.appendChild(group);\n     };\n</code></pre>\n</div></li></ul></div></div></div><div id='method-inputTel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CreateForm'>CreateForm</span><br/><a href='source/FormBuild.html#CreateForm-method-inputTel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CreateForm-method-inputTel' class='name expandable'>inputTel</a>( <span class='pre'>id, name, label, placeholder, maxlength</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Ajouter un Input de type tel à l'objet CreatForm. ...</div><div class='long'><p>Ajouter un Input de type tel à l'objet CreatForm.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String<div class='sub-desc'><p>ID à ajouter à l'élément créé.</p>\n</div></li><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Nom à ajouter aux élément créé (à l'attribut name de l'input et, si label, au for de l'élément label).</p>\n</div></li><li><span class='pre'>label</span> : String<div class='sub-desc'><p>Ignoré si false. Si label, ajout de l'élément label avec inner.html du paramètre envoyé.</p>\n</div></li><li><span class='pre'>placeholder</span> : String<div class='sub-desc'><p>Ignoré si false. Si placeholder, ajout de l'attribut placeholder à l'élément input créé avac la valeur de la chaine de carractère envoyé en paramètre.</p>\n</div></li><li><span class='pre'>maxlength</span> : Number<div class='sub-desc'><p>Ingnoré si false ou not Integer. Si maxlength, ajout de l'attribut à l'élément créé avec la valeur de l'integer envoyé en paramètre.</p>\n\n<h2>Utilisation :</h2>\n\n<pre><code> var f = new Crispi.CreateForm(method, action);\n f.inputTel('id', 'name', 'label', 'palceholder', Int);\n f.publishForm('idTag);\n</code></pre>\n\n<h2>Fonction :</h2>\n\n<pre><code> Crispi.CreateForm.prototype.inputTel =function (id, name, label, placeholder, maxlength) {\n     var group = document.createElement('div');\n     group.id = 'form_group_'+id;\n     group.className = 'c_from_group';\n     if (label){\n         var lab = document.createElement('label');\n         lab.id = 'label_'+id;\n         lab.htmlFor = id;\n         lab.innerHTML = label;\n         group.appendChild(lab);\n     }\n     var input = document.createElement('input');\n     input.type = 'tel';\n     input.id = id;\n     input.name = name;\n     if (placeholder){\n         input.placeholder = placeholder;\n     }\n     if (maxlength &amp;&amp; Number.isInteger(maxlength)){\n         input.maxLength = maxlength;\n     }\n     group.appendChild(input);\n     this.form.appendChild(group);\n     };\n</code></pre>\n</div></li></ul></div></div></div><div id='method-inputText' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CreateForm'>CreateForm</span><br/><a href='source/FormBuild.html#CreateForm-method-inputText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CreateForm-method-inputText' class='name expandable'>inputText</a>( <span class='pre'>id, name, label, placeholder, maxlength</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Ajouter un Input de type text à l'objet CreatForm. ...</div><div class='long'><p>Ajouter un Input de type text à l'objet CreatForm.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String<div class='sub-desc'><p>ID à ajouter à l'élément créé.</p>\n</div></li><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Nom à ajouter aux élément créé (à l'attribut name de l'input et, si label, au for de l'élément label).</p>\n</div></li><li><span class='pre'>label</span> : String<div class='sub-desc'><p>Ignoré si false. Si label, ajout de l'élément label avec inner.html du paramètre envoyé.</p>\n</div></li><li><span class='pre'>placeholder</span> : String<div class='sub-desc'><p>Ignoré si false. Si placeholder, ajout de l'attribut placeholder à l'élément input créé avac la valeur de la chaine de carractère envoyé en paramètre.</p>\n</div></li><li><span class='pre'>maxlength</span> : Number<div class='sub-desc'><p>Ingnoré si false ou not Integer. Si maxlength, ajout de l'attribut à l'élément créé avec la valeur de l'integer envoyé en paramètre.</p>\n\n<h2>Utilisation :</h2>\n\n<pre><code> var f = new Crispi.CreateForm(method, action);\n f.inputText('id', 'name', 'label', 'palceholder', Int);\n f.publishForm('idTag);\n</code></pre>\n\n<h2>Fonction :</h2>\n\n<pre><code> Crispi.CreateForm.prototype.inputText =function (id, name, label, placeholder, maxlength) {\n     var group = document.createElement('div');\n     group.id = 'form_group_'+id;\n     group.className = 'c_from_group';\n     if (label){\n         var lab = document.createElement('label');\n         lab.id = 'label_'+id;\n         lab.htmlFor = id;\n         lab.innerHTML = label;\n         group.appendChild(lab);\n     }\n     var input = document.createElement('input');\n     input.type = 'text';\n     input.id = id;\n     input.name = name;\n     if (placeholder){\n         input.placeholder = placeholder;\n     }\n     if (maxlength &amp;&amp; Number.isInteger(maxlength)){\n         input.maxLength = maxlength;\n     }\n     group.appendChild(input);\n     this.form.appendChild(group);\n     };\n</code></pre>\n</div></li></ul></div></div></div><div id='method-inputTextarea' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CreateForm'>CreateForm</span><br/><a href='source/FormBuild.html#CreateForm-method-inputTextarea' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CreateForm-method-inputTextarea' class='name expandable'>inputTextarea</a>( <span class='pre'>id, name, label, text, rows, cols</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Ajouter un Input de type textarea à l'objet CreatForm. ...</div><div class='long'><p>Ajouter un Input de type textarea à l'objet CreatForm.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String<div class='sub-desc'><p>ID à ajouter à l'élément créé.</p>\n</div></li><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Nom à ajouter aux élément créé (à l'attribut name de l'input et, si label, au for de l'élément label).</p>\n</div></li><li><span class='pre'>label</span> : String<div class='sub-desc'><p>Ignoré si false. Si label, ajout de l'élément label avec inner.html du paramètre envoyé.</p>\n</div></li><li><span class='pre'>text</span> : String<div class='sub-desc'><p>Ignoré si false. Si text, ajout du text aver innen.html à l'élément input créé avac la valeur de la chaine de carractère envoyé en paramètre, ex : 'Début du text'.</p>\n</div></li><li><span class='pre'>rows</span> : Number/String<div class='sub-desc'><p>Ignoré si false. Si rows, ajout de l'attribut rows à l'élément input créé avac la valeur de l'integer envoyé en paramètre, ex : '0'.</p>\n</div></li><li><span class='pre'>cols</span> : Number/String<div class='sub-desc'><p>Ignoré si false. Si cols, ajout de l'attribut cols à l'élément input créé avac la valeur de l'integer envoyé en paramètre, ex : '100'.</p>\n\n<p>ATTENTION : Si Rows ou Cols sont égale à 0, alors, envoyer le carractère 0 (ex : '0'):</p>\n\n<h2>Utilisation :</h2>\n\n<pre><code> var f = new Crispi.CreateForm(method, action);\n f.inputTextarea('id', 'name', 'label', 'text', rows, cols);\n f.publishForm('idTag);\n</code></pre>\n\n<h2>Fonction :</h2>\n\n<pre><code> Crispi.CreateForm.prototype.inputTextarea =function (id, name, label, text, rows, cols) {\n     var group = document.createElement('div');\n     group.id = 'form_group_'+id;\n     group.className = 'c_from_group';\n     if (label){\n         var lab = document.createElement('label');\n         lab.id = 'label_'+id;\n         lab.htmlFor = id;\n         lab.innerHTML = label;\n         group.appendChild(lab);\n     }\n     var input = document.createElement('textarea');\n     input.id = id;\n     input.name = name;\n     if (text){\n         input.innerHTML = text;\n     }\n     if (rows){\n         input.rows = rows;\n     }\n     if (cols){\n         input.cols = cols;\n     }\n\n     group.appendChild(input);\n     this.form.appendChild(group);\n     };\n</code></pre>\n</div></li></ul></div></div></div><div id='method-inputTime' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CreateForm'>CreateForm</span><br/><a href='source/FormBuild.html#CreateForm-method-inputTime' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CreateForm-method-inputTime' class='name expandable'>inputTime</a>( <span class='pre'>id, name, label, value</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Ajouter un Input de type time à l'objet CreatForm. ...</div><div class='long'><p>Ajouter un Input de type time à l'objet CreatForm.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String<div class='sub-desc'><p>ID à ajouter à l'élément créé.</p>\n</div></li><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Nom à ajouter aux élément créé (à l'attribut name de l'input et, si label, au for de l'élément label).</p>\n</div></li><li><span class='pre'>label</span> : String<div class='sub-desc'><p>Ignoré si false. Si label, ajout de l'élément label avec inner.html du paramètre envoyé.</p>\n</div></li><li><span class='pre'>value</span> : String<div class='sub-desc'><p>Ignoré si false. Si value, ajout de l'attribut value à l'élément input créé avac la valeur de la chaine de carractère envoyé en paramètre, ex : '12:30:05'.</p>\n\n<h2>Utilisation :</h2>\n\n<pre><code> var f = new Crispi.CreateForm(method, action);\n f.inputTime('id', 'name', 'label', 'value');\n f.publishForm('idTag);\n</code></pre>\n\n<h2>Fonction :</h2>\n\n<pre><code> Crispi.CreateForm.prototype.inputTime =function (id, name, label, value) {\n     var group = document.createElement('div');\n     group.id = 'form_group_'+id;\n     group.className = 'c_from_group';\n     if (label){\n         var lab = document.createElement('label');\n         lab.id = 'label_'+id;\n         lab.htmlFor = id;\n         lab.innerHTML = label;\n         group.appendChild(lab);\n     }\n     var input = document.createElement('input');\n     input.type = 'time';\n     input.id = id;\n     input.name = name;\n     if (value){\n         input.value = value;\n     }\n\n     group.appendChild(input);\n     this.form.appendChild(group);\n     };\n</code></pre>\n</div></li></ul></div></div></div><div id='method-labelUpInput' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CreateForm'>CreateForm</span><br/><a href='source/FormBuild.html#CreateForm-method-labelUpInput' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CreateForm-method-labelUpInput' class='name expandable'>labelUpInput</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Placer les Label au dessus des Inputs. ...</div><div class='long'><p>Placer les Label au dessus des Inputs.</p>\n\n<h2>Utilisation :</h2>\n\n<pre><code> var f = new Crispi.CreateForm(method, action);\n f.inputNumber('id', 'name', 'label', 'value', min, max);\n f.labelUpInput();\n f.publishForm('idTag);\n</code></pre>\n\n<h2>Fonction :</h2>\n\n<pre><code> Crispi.CreateForm.prototype.labelUpInput = function () {\n     var br = [];\n     var lab = this.form.getElementsByTagName('label');\n     for (var i=0; i&lt;lab.length;i++) {\n     br[i]= document.createElement('br');\n     lab[i].after(br[i]);\n     }\n };\n</code></pre>\n</div></div></div><div id='method-publishForm' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CreateForm'>CreateForm</span><br/><a href='source/FormBuild.html#CreateForm-method-publishForm' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CreateForm-method-publishForm' class='name expandable'>publishForm</a>( <span class='pre'>idTag</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Placer le formulaire dans le tag ou l'Id est le paramètre envoyé: ...</div><div class='long'><p>Placer le formulaire dans le tag ou l'Id est le paramètre envoyé:</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>idTag</span> : String<div class='sub-desc'><p>Id de l'élément dans le quel placer le formulaire.</p>\n\n<h2>Utilisation :</h2>\n\n<pre><code> var f = new Crispi.CreateForm();\n f.publishForm('idTag');\n</code></pre>\n\n<h2>Fonction :</h2>\n\n<pre><code> Crispi.CreateForm.prototype.publishForm = function (idTag) {\n     tag = document.getElementById(idTag);\n     tag.appendChild(this.form);\n };\n</code></pre>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});